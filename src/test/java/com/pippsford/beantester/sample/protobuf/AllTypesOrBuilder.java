// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

package com.pippsford.beantester.sample.protobuf;

public interface AllTypesOrBuilder extends
                                   // @@protoc_insertion_point(interface_extends:beantest.AllTypes)
                                       com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  boolean containsMapValue(
      String key
  );

  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  boolean containsMapValue2(
      int key
  );

  /**
   * <code>bool bool_value = 13;</code>
   *
   * @return The boolValue.
   */
  boolean getBoolValue();

  /**
   * <code>bytes bytes_value = 15;</code>
   *
   * @return The bytesValue.
   */
  com.google.protobuf.ByteString getBytesValue();

  /**
   * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
   *
   * @return The dayOfTheWeek.
   */
  DayOfTheWeek getDayOfTheWeek();

  /**
   * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
   *
   * @return The enum numeric value on the wire for dayOfTheWeek.
   */
  int getDayOfTheWeekValue();

  /**
   * <code>double double_value = 1;</code>
   *
   * @return The doubleValue.
   */
  double getDoubleValue();

  /**
   * <code>fixed32 fixed32_value = 9;</code>
   *
   * @return The fixed32Value.
   */
  int getFixed32Value();

  /**
   * <code>fixed64 fixed64_value = 10;</code>
   *
   * @return The fixed64Value.
   */
  long getFixed64Value();

  /**
   * <code>float float_value = 2;</code>
   *
   * @return The floatValue.
   */
  float getFloatValue();

  /**
   * <code>int32 int32_value = 3;</code>
   *
   * @return The int32Value.
   */
  int getInt32Value();

  /**
   * <code>int64 int64_value = 4;</code>
   *
   * @return The int64Value.
   */
  long getInt64Value();

  /**
   * Use {@link #getMapValueMap()} instead.
   */
  @Deprecated
  java.util.Map<String, Integer>
  getMapValue();

  /**
   * Use {@link #getMapValue2Map()} instead.
   */
  @Deprecated
  java.util.Map<Integer, String>
  getMapValue2();

  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  int getMapValue2Count();

  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  java.util.Map<Integer, String>
  getMapValue2Map();

  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  /* nullable */
  String getMapValue2OrDefault(
      int key,
      /* nullable */
      String defaultValue
  );

  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  String getMapValue2OrThrow(
      int key
  );

  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  int getMapValueCount();

  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  java.util.Map<String, Integer>
  getMapValueMap();

  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  int getMapValueOrDefault(
      String key,
      int defaultValue
  );

  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  int getMapValueOrThrow(
      String key
  );

  /**
   * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
   *
   * @return The messageWithOneOf.
   */
  MessageWithOneOf getMessageWithOneOf();

  /**
   * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
   */
  MessageWithOneOfOrBuilder getMessageWithOneOfOrBuilder();

  /**
   * <code>repeated bool repeated_bool_value = 20;</code>
   *
   * @param index The index of the element to return.
   *
   * @return The repeatedBoolValue at the given index.
   */
  boolean getRepeatedBoolValue(int index);

  /**
   * <code>repeated bool repeated_bool_value = 20;</code>
   *
   * @return The count of repeatedBoolValue.
   */
  int getRepeatedBoolValueCount();

  /**
   * <code>repeated bool repeated_bool_value = 20;</code>
   *
   * @return A list containing the repeatedBoolValue.
   */
  java.util.List<Boolean> getRepeatedBoolValueList();

  /**
   * <code>repeated int32 repeated_int_value = 21;</code>
   *
   * @param index The index of the element to return.
   *
   * @return The repeatedIntValue at the given index.
   */
  int getRepeatedIntValue(int index);

  /**
   * <code>repeated int32 repeated_int_value = 21;</code>
   *
   * @return The count of repeatedIntValue.
   */
  int getRepeatedIntValueCount();

  /**
   * <code>repeated int32 repeated_int_value = 21;</code>
   *
   * @return A list containing the repeatedIntValue.
   */
  java.util.List<Integer> getRepeatedIntValueList();

  /**
   * <code>sfixed32 sfixed32_value = 11;</code>
   *
   * @return The sfixed32Value.
   */
  int getSfixed32Value();

  /**
   * <code>sfixed64 sfixed64_value = 12;</code>
   *
   * @return The sfixed64Value.
   */
  long getSfixed64Value();

  /**
   * <code>sint32 sint32_value = 7;</code>
   *
   * @return The sint32Value.
   */
  int getSint32Value();

  /**
   * <code>sint64 sint64_value = 8;</code>
   *
   * @return The sint64Value.
   */
  long getSint64Value();

  /**
   * <code>string string_value = 14;</code>
   *
   * @return The stringValue.
   */
  String getStringValue();

  /**
   * <code>string string_value = 14;</code>
   *
   * @return The bytes for stringValue.
   */
  com.google.protobuf.ByteString
  getStringValueBytes();

  /**
   * <code>uint32 uint32_value = 5;</code>
   *
   * @return The uint32Value.
   */
  int getUint32Value();

  /**
   * <code>uint64 uint64_value = 6;</code>
   *
   * @return The uint64Value.
   */
  long getUint64Value();

  /**
   * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
   *
   * @return Whether the messageWithOneOf field is set.
   */
  boolean hasMessageWithOneOf();

}
