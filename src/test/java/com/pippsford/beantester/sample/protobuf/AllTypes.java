// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

package com.pippsford.beantester.sample.protobuf;

/**
 * Protobuf type {@code beantest.AllTypes}
 */
public final class AllTypes extends
                            com.google.protobuf.GeneratedMessageV3 implements
                                                                   // @@protoc_insertion_point(message_implements:beantest.AllTypes)
                                                                       AllTypesOrBuilder {

  public static final int BOOL_VALUE_FIELD_NUMBER = 13;

  public static final int BYTES_VALUE_FIELD_NUMBER = 15;

  public static final int DAY_OF_THE_WEEK_FIELD_NUMBER = 16;

  public static final int DOUBLE_VALUE_FIELD_NUMBER = 1;

  public static final int FIXED32_VALUE_FIELD_NUMBER = 9;

  public static final int FIXED64_VALUE_FIELD_NUMBER = 10;

  public static final int FLOAT_VALUE_FIELD_NUMBER = 2;

  public static final int INT32_VALUE_FIELD_NUMBER = 3;

  public static final int INT64_VALUE_FIELD_NUMBER = 4;

  public static final int MAP_VALUE2_FIELD_NUMBER = 19;

  public static final int MAP_VALUE_FIELD_NUMBER = 18;

  public static final int MESSAGE_WITH_ONE_OF_FIELD_NUMBER = 17;

  public static final int REPEATED_BOOL_VALUE_FIELD_NUMBER = 20;

  public static final int REPEATED_INT_VALUE_FIELD_NUMBER = 21;

  public static final int SFIXED32_VALUE_FIELD_NUMBER = 11;

  public static final int SFIXED64_VALUE_FIELD_NUMBER = 12;

  public static final int SINT32_VALUE_FIELD_NUMBER = 7;

  public static final int SINT64_VALUE_FIELD_NUMBER = 8;

  public static final int STRING_VALUE_FIELD_NUMBER = 14;

  public static final int UINT32_VALUE_FIELD_NUMBER = 5;

  public static final int UINT64_VALUE_FIELD_NUMBER = 6;

  // @@protoc_insertion_point(class_scope:beantest.AllTypes)
  private static final AllTypes DEFAULT_INSTANCE;

  private static final com.google.protobuf.Parser<AllTypes>
      PARSER = new com.google.protobuf.AbstractParser<AllTypes>() {
    @Override
    public AllTypes parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry
    )
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  private static final long serialVersionUID = 0L;



  /**
   * Protobuf type {@code beantest.AllTypes}
   */
  public static final class Builder extends
                                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                                                                                            // @@protoc_insertion_point(builder_implements:beantest.AllTypes)
                                                                                                AllTypesOrBuilder {

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return Example.internal_static_beantest_AllTypes_descriptor;
    }

    private int bitField0_;

    private boolean boolValue_;

    private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;

    private int dayOfTheWeek_ = 0;

    private double doubleValue_;

    private int fixed32Value_;

    private long fixed64Value_;

    private float floatValue_;

    private int int32Value_;

    private long int64Value_;

    private com.google.protobuf.MapField<
        Integer, String> mapValue2_;

    private com.google.protobuf.MapField<
        String, Integer> mapValue_;

    private com.google.protobuf.SingleFieldBuilderV3<
        MessageWithOneOf, MessageWithOneOf.Builder, MessageWithOneOfOrBuilder> messageWithOneOfBuilder_;

    private MessageWithOneOf messageWithOneOf_;

    private com.google.protobuf.Internal.BooleanList repeatedBoolValue_ = emptyBooleanList();

    private com.google.protobuf.Internal.IntList repeatedIntValue_ = emptyIntList();

    private int sfixed32Value_;

    private long sfixed64Value_;

    private int sint32Value_;

    private long sint64Value_;

    private Object stringValue_ = "";

    private int uint32Value_;

    private long uint64Value_;


    // Construct using com.pippsford.beantester.protobuf.AllTypes.newBuilder()
    private Builder() {

    }


    private Builder(
        BuilderParent parent
    ) {
      super(parent);

    }


    /**
     * <code>repeated bool repeated_bool_value = 20;</code>
     *
     * @param values The repeatedBoolValue to add.
     *
     * @return This builder for chaining.
     */
    public Builder addAllRepeatedBoolValue(
        Iterable<? extends Boolean> values
    ) {
      ensureRepeatedBoolValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, repeatedBoolValue_);
      onChanged();
      return this;
    }


    /**
     * <code>repeated int32 repeated_int_value = 21;</code>
     *
     * @param values The repeatedIntValue to add.
     *
     * @return This builder for chaining.
     */
    public Builder addAllRepeatedIntValue(
        Iterable<? extends Integer> values
    ) {
      ensureRepeatedIntValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, repeatedIntValue_);
      onChanged();
      return this;
    }


    /**
     * <code>repeated bool repeated_bool_value = 20;</code>
     *
     * @param value The repeatedBoolValue to add.
     *
     * @return This builder for chaining.
     */
    public Builder addRepeatedBoolValue(boolean value) {

      ensureRepeatedBoolValueIsMutable();
      repeatedBoolValue_.addBoolean(value);
      onChanged();
      return this;
    }


    /**
     * <code>repeated int32 repeated_int_value = 21;</code>
     *
     * @param value The repeatedIntValue to add.
     *
     * @return This builder for chaining.
     */
    public Builder addRepeatedIntValue(int value) {

      ensureRepeatedIntValueIsMutable();
      repeatedIntValue_.addInt(value);
      onChanged();
      return this;
    }


    @Override
    public AllTypes build() {
      AllTypes result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }


    @Override
    public AllTypes buildPartial() {
      AllTypes result = new AllTypes(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }


    private void buildPartial0(AllTypes result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.doubleValue_ = doubleValue_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.floatValue_ = floatValue_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.int32Value_ = int32Value_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.int64Value_ = int64Value_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.uint32Value_ = uint32Value_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.uint64Value_ = uint64Value_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.sint32Value_ = sint32Value_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.sint64Value_ = sint64Value_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.fixed32Value_ = fixed32Value_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.fixed64Value_ = fixed64Value_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.sfixed32Value_ = sfixed32Value_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.sfixed64Value_ = sfixed64Value_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.boolValue_ = boolValue_;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.stringValue_ = stringValue_;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.bytesValue_ = bytesValue_;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.dayOfTheWeek_ = dayOfTheWeek_;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.messageWithOneOf_ = messageWithOneOfBuilder_ == null
            ? messageWithOneOf_
            : messageWithOneOfBuilder_.build();
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.mapValue_ = internalGetMapValue();
        result.mapValue_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.mapValue2_ = internalGetMapValue2();
        result.mapValue2_.makeImmutable();
      }
    }


    private void buildPartialRepeatedFields(AllTypes result) {
      if (((bitField0_ & 0x00080000) != 0)) {
        repeatedBoolValue_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00080000);
      }
      result.repeatedBoolValue_ = repeatedBoolValue_;
      if (((bitField0_ & 0x00100000) != 0)) {
        repeatedIntValue_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00100000);
      }
      result.repeatedIntValue_ = repeatedIntValue_;
    }


    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      doubleValue_ = 0D;
      floatValue_ = 0F;
      int32Value_ = 0;
      int64Value_ = 0L;
      uint32Value_ = 0;
      uint64Value_ = 0L;
      sint32Value_ = 0;
      sint64Value_ = 0L;
      fixed32Value_ = 0;
      fixed64Value_ = 0L;
      sfixed32Value_ = 0;
      sfixed64Value_ = 0L;
      boolValue_ = false;
      stringValue_ = "";
      bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      dayOfTheWeek_ = 0;
      messageWithOneOf_ = null;
      if (messageWithOneOfBuilder_ != null) {
        messageWithOneOfBuilder_.dispose();
        messageWithOneOfBuilder_ = null;
      }
      internalGetMutableMapValue().clear();
      internalGetMutableMapValue2().clear();
      repeatedBoolValue_ = emptyBooleanList();
      repeatedIntValue_ = emptyIntList();
      return this;
    }


    /**
     * <code>bool bool_value = 13;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBoolValue() {
      bitField0_ = (bitField0_ & ~0x00001000);
      boolValue_ = false;
      onChanged();
      return this;
    }


    /**
     * <code>bytes bytes_value = 15;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBytesValue() {
      bitField0_ = (bitField0_ & ~0x00004000);
      bytesValue_ = getDefaultInstance().getBytesValue();
      onChanged();
      return this;
    }


    /**
     * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDayOfTheWeek() {
      bitField0_ = (bitField0_ & ~0x00008000);
      dayOfTheWeek_ = 0;
      onChanged();
      return this;
    }


    /**
     * <code>double double_value = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDoubleValue() {
      bitField0_ = (bitField0_ & ~0x00000001);
      doubleValue_ = 0D;
      onChanged();
      return this;
    }


    /**
     * <code>fixed32 fixed32_value = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFixed32Value() {
      bitField0_ = (bitField0_ & ~0x00000100);
      fixed32Value_ = 0;
      onChanged();
      return this;
    }


    /**
     * <code>fixed64 fixed64_value = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFixed64Value() {
      bitField0_ = (bitField0_ & ~0x00000200);
      fixed64Value_ = 0L;
      onChanged();
      return this;
    }


    /**
     * <code>float float_value = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFloatValue() {
      bitField0_ = (bitField0_ & ~0x00000002);
      floatValue_ = 0F;
      onChanged();
      return this;
    }


    /**
     * <code>int32 int32_value = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearInt32Value() {
      bitField0_ = (bitField0_ & ~0x00000004);
      int32Value_ = 0;
      onChanged();
      return this;
    }


    /**
     * <code>int64 int64_value = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearInt64Value() {
      bitField0_ = (bitField0_ & ~0x00000008);
      int64Value_ = 0L;
      onChanged();
      return this;
    }


    public Builder clearMapValue() {
      bitField0_ = (bitField0_ & ~0x00020000);
      internalGetMutableMapValue().getMutableMap()
          .clear();
      return this;
    }


    public Builder clearMapValue2() {
      bitField0_ = (bitField0_ & ~0x00040000);
      internalGetMutableMapValue2().getMutableMap()
          .clear();
      return this;
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     */
    public Builder clearMessageWithOneOf() {
      bitField0_ = (bitField0_ & ~0x00010000);
      messageWithOneOf_ = null;
      if (messageWithOneOfBuilder_ != null) {
        messageWithOneOfBuilder_.dispose();
        messageWithOneOfBuilder_ = null;
      }
      onChanged();
      return this;
    }


    /**
     * <code>repeated bool repeated_bool_value = 20;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRepeatedBoolValue() {
      repeatedBoolValue_ = emptyBooleanList();
      bitField0_ = (bitField0_ & ~0x00080000);
      onChanged();
      return this;
    }


    /**
     * <code>repeated int32 repeated_int_value = 21;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRepeatedIntValue() {
      repeatedIntValue_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00100000);
      onChanged();
      return this;
    }


    /**
     * <code>sfixed32 sfixed32_value = 11;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSfixed32Value() {
      bitField0_ = (bitField0_ & ~0x00000400);
      sfixed32Value_ = 0;
      onChanged();
      return this;
    }


    /**
     * <code>sfixed64 sfixed64_value = 12;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSfixed64Value() {
      bitField0_ = (bitField0_ & ~0x00000800);
      sfixed64Value_ = 0L;
      onChanged();
      return this;
    }


    /**
     * <code>sint32 sint32_value = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSint32Value() {
      bitField0_ = (bitField0_ & ~0x00000040);
      sint32Value_ = 0;
      onChanged();
      return this;
    }


    /**
     * <code>sint64 sint64_value = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSint64Value() {
      bitField0_ = (bitField0_ & ~0x00000080);
      sint64Value_ = 0L;
      onChanged();
      return this;
    }


    /**
     * <code>string string_value = 14;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStringValue() {
      stringValue_ = getDefaultInstance().getStringValue();
      bitField0_ = (bitField0_ & ~0x00002000);
      onChanged();
      return this;
    }


    /**
     * <code>uint32 uint32_value = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearUint32Value() {
      bitField0_ = (bitField0_ & ~0x00000010);
      uint32Value_ = 0;
      onChanged();
      return this;
    }


    /**
     * <code>uint64 uint64_value = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearUint64Value() {
      bitField0_ = (bitField0_ & ~0x00000020);
      uint64Value_ = 0L;
      onChanged();
      return this;
    }


    /**
     * <code>map&lt;string, int32&gt; map_value = 18;</code>
     */
    @Override
    public boolean containsMapValue(
        String key
    ) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetMapValue().getMap().containsKey(key);
    }


    /**
     * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
     */
    @Override
    public boolean containsMapValue2(
        int key
    ) {

      return internalGetMapValue2().getMap().containsKey(key);
    }


    private void ensureRepeatedBoolValueIsMutable() {
      if (!((bitField0_ & 0x00080000) != 0)) {
        repeatedBoolValue_ = mutableCopy(repeatedBoolValue_);
        bitField0_ |= 0x00080000;
      }
    }


    private void ensureRepeatedIntValueIsMutable() {
      if (!((bitField0_ & 0x00100000) != 0)) {
        repeatedIntValue_ = mutableCopy(repeatedIntValue_);
        bitField0_ |= 0x00100000;
      }
    }


    /**
     * <code>bool bool_value = 13;</code>
     *
     * @return The boolValue.
     */
    @Override
    public boolean getBoolValue() {
      return boolValue_;
    }


    /**
     * <code>bytes bytes_value = 15;</code>
     *
     * @return The bytesValue.
     */
    @Override
    public com.google.protobuf.ByteString getBytesValue() {
      return bytesValue_;
    }


    /**
     * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
     *
     * @return The dayOfTheWeek.
     */
    @Override
    public DayOfTheWeek getDayOfTheWeek() {
      DayOfTheWeek result = DayOfTheWeek.forNumber(dayOfTheWeek_);
      return result == null ? DayOfTheWeek.UNRECOGNIZED : result;
    }


    /**
     * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
     *
     * @return The enum numeric value on the wire for dayOfTheWeek.
     */
    @Override
    public int getDayOfTheWeekValue() {
      return dayOfTheWeek_;
    }


    @Override
    public AllTypes getDefaultInstanceForType() {
      return AllTypes.getDefaultInstance();
    }


    @Override
    public com.google.protobuf.Descriptors.Descriptor
    getDescriptorForType() {
      return Example.internal_static_beantest_AllTypes_descriptor;
    }


    /**
     * <code>double double_value = 1;</code>
     *
     * @return The doubleValue.
     */
    @Override
    public double getDoubleValue() {
      return doubleValue_;
    }


    /**
     * <code>fixed32 fixed32_value = 9;</code>
     *
     * @return The fixed32Value.
     */
    @Override
    public int getFixed32Value() {
      return fixed32Value_;
    }


    /**
     * <code>fixed64 fixed64_value = 10;</code>
     *
     * @return The fixed64Value.
     */
    @Override
    public long getFixed64Value() {
      return fixed64Value_;
    }


    /**
     * <code>float float_value = 2;</code>
     *
     * @return The floatValue.
     */
    @Override
    public float getFloatValue() {
      return floatValue_;
    }


    /**
     * <code>int32 int32_value = 3;</code>
     *
     * @return The int32Value.
     */
    @Override
    public int getInt32Value() {
      return int32Value_;
    }


    /**
     * <code>int64 int64_value = 4;</code>
     *
     * @return The int64Value.
     */
    @Override
    public long getInt64Value() {
      return int64Value_;
    }


    /**
     * Use {@link #getMapValueMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, Integer> getMapValue() {
      return getMapValueMap();
    }


    /**
     * Use {@link #getMapValue2Map()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, String> getMapValue2() {
      return getMapValue2Map();
    }


    public int getMapValue2Count() {
      return internalGetMapValue2().getMap().size();
    }


    /**
     * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
     */
    @Override
    public java.util.Map<Integer, String> getMapValue2Map() {
      return internalGetMapValue2().getMap();
    }


    /**
     * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
     */
    @Override
    public /* nullable */
    String getMapValue2OrDefault(
        int key,
        /* nullable */
        String defaultValue
    ) {

      java.util.Map<Integer, String> map =
          internalGetMapValue2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }


    /**
     * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
     */
    @Override
    public String getMapValue2OrThrow(
        int key
    ) {

      java.util.Map<Integer, String> map =
          internalGetMapValue2().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }


    public int getMapValueCount() {
      return internalGetMapValue().getMap().size();
    }


    /**
     * <code>map&lt;string, int32&gt; map_value = 18;</code>
     */
    @Override
    public java.util.Map<String, Integer> getMapValueMap() {
      return internalGetMapValue().getMap();
    }


    /**
     * <code>map&lt;string, int32&gt; map_value = 18;</code>
     */
    @Override
    public int getMapValueOrDefault(
        String key,
        int defaultValue
    ) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<String, Integer> map =
          internalGetMapValue().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }


    /**
     * <code>map&lt;string, int32&gt; map_value = 18;</code>
     */
    @Override
    public int getMapValueOrThrow(
        String key
    ) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<String, Integer> map =
          internalGetMapValue().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     *
     * @return The messageWithOneOf.
     */
    public MessageWithOneOf getMessageWithOneOf() {
      if (messageWithOneOfBuilder_ == null) {
        return messageWithOneOf_ == null ? MessageWithOneOf.getDefaultInstance() : messageWithOneOf_;
      } else {
        return messageWithOneOfBuilder_.getMessage();
      }
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     */
    public MessageWithOneOf.Builder getMessageWithOneOfBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getMessageWithOneOfFieldBuilder().getBuilder();
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        MessageWithOneOf, MessageWithOneOf.Builder, MessageWithOneOfOrBuilder>
    getMessageWithOneOfFieldBuilder() {
      if (messageWithOneOfBuilder_ == null) {
        messageWithOneOfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            MessageWithOneOf, MessageWithOneOf.Builder, MessageWithOneOfOrBuilder>(
            getMessageWithOneOf(),
            getParentForChildren(),
            isClean()
        );
        messageWithOneOf_ = null;
      }
      return messageWithOneOfBuilder_;
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     */
    public MessageWithOneOfOrBuilder getMessageWithOneOfOrBuilder() {
      if (messageWithOneOfBuilder_ != null) {
        return messageWithOneOfBuilder_.getMessageOrBuilder();
      } else {
        return messageWithOneOf_ == null ?
            MessageWithOneOf.getDefaultInstance() : messageWithOneOf_;
      }
    }


    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, Integer>
    getMutableMapValue() {
      bitField0_ |= 0x00020000;
      return internalGetMutableMapValue().getMutableMap();
    }


    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<Integer, String>
    getMutableMapValue2() {
      bitField0_ |= 0x00040000;
      return internalGetMutableMapValue2().getMutableMap();
    }


    /**
     * <code>repeated bool repeated_bool_value = 20;</code>
     *
     * @param index The index of the element to return.
     *
     * @return The repeatedBoolValue at the given index.
     */
    public boolean getRepeatedBoolValue(int index) {
      return repeatedBoolValue_.getBoolean(index);
    }


    /**
     * <code>repeated bool repeated_bool_value = 20;</code>
     *
     * @return The count of repeatedBoolValue.
     */
    public int getRepeatedBoolValueCount() {
      return repeatedBoolValue_.size();
    }


    /**
     * <code>repeated bool repeated_bool_value = 20;</code>
     *
     * @return A list containing the repeatedBoolValue.
     */
    public java.util.List<Boolean>
    getRepeatedBoolValueList() {
      return ((bitField0_ & 0x00080000) != 0) ?
          java.util.Collections.unmodifiableList(repeatedBoolValue_) : repeatedBoolValue_;
    }


    /**
     * <code>repeated int32 repeated_int_value = 21;</code>
     *
     * @param index The index of the element to return.
     *
     * @return The repeatedIntValue at the given index.
     */
    public int getRepeatedIntValue(int index) {
      return repeatedIntValue_.getInt(index);
    }


    /**
     * <code>repeated int32 repeated_int_value = 21;</code>
     *
     * @return The count of repeatedIntValue.
     */
    public int getRepeatedIntValueCount() {
      return repeatedIntValue_.size();
    }


    /**
     * <code>repeated int32 repeated_int_value = 21;</code>
     *
     * @return A list containing the repeatedIntValue.
     */
    public java.util.List<Integer>
    getRepeatedIntValueList() {
      return ((bitField0_ & 0x00100000) != 0) ?
          java.util.Collections.unmodifiableList(repeatedIntValue_) : repeatedIntValue_;
    }


    /**
     * <code>sfixed32 sfixed32_value = 11;</code>
     *
     * @return The sfixed32Value.
     */
    @Override
    public int getSfixed32Value() {
      return sfixed32Value_;
    }


    /**
     * <code>sfixed64 sfixed64_value = 12;</code>
     *
     * @return The sfixed64Value.
     */
    @Override
    public long getSfixed64Value() {
      return sfixed64Value_;
    }


    /**
     * <code>sint32 sint32_value = 7;</code>
     *
     * @return The sint32Value.
     */
    @Override
    public int getSint32Value() {
      return sint32Value_;
    }


    /**
     * <code>sint64 sint64_value = 8;</code>
     *
     * @return The sint64Value.
     */
    @Override
    public long getSint64Value() {
      return sint64Value_;
    }


    /**
     * <code>string string_value = 14;</code>
     *
     * @return The stringValue.
     */
    public String getStringValue() {
      Object ref = stringValue_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        stringValue_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }


    /**
     * <code>string string_value = 14;</code>
     *
     * @return The bytes for stringValue.
     */
    public com.google.protobuf.ByteString
    getStringValueBytes() {
      Object ref = stringValue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }


    /**
     * <code>uint32 uint32_value = 5;</code>
     *
     * @return The uint32Value.
     */
    @Override
    public int getUint32Value() {
      return uint32Value_;
    }


    /**
     * <code>uint64 uint64_value = 6;</code>
     *
     * @return The uint64Value.
     */
    @Override
    public long getUint64Value() {
      return uint64Value_;
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     *
     * @return Whether the messageWithOneOf field is set.
     */
    public boolean hasMessageWithOneOf() {
      return ((bitField0_ & 0x00010000) != 0);
    }


    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return Example.internal_static_beantest_AllTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AllTypes.class, Builder.class);
    }


    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number
    ) {
      switch (number) {
        case 18:
          return internalGetMapValue();
        case 19:
          return internalGetMapValue2();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }


    private com.google.protobuf.MapField<String, Integer>
    internalGetMapValue() {
      if (mapValue_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapValueDefaultEntryHolder.defaultEntry);
      }
      return mapValue_;
    }


    private com.google.protobuf.MapField<Integer, String>
    internalGetMapValue2() {
      if (mapValue2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapValue2DefaultEntryHolder.defaultEntry);
      }
      return mapValue2_;
    }


    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number
    ) {
      switch (number) {
        case 18:
          return internalGetMutableMapValue();
        case 19:
          return internalGetMutableMapValue2();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }


    private com.google.protobuf.MapField<String, Integer>
    internalGetMutableMapValue() {
      if (mapValue_ == null) {
        mapValue_ = com.google.protobuf.MapField.newMapField(
            MapValueDefaultEntryHolder.defaultEntry);
      }
      if (!mapValue_.isMutable()) {
        mapValue_ = mapValue_.copy();
      }
      bitField0_ |= 0x00020000;
      onChanged();
      return mapValue_;
    }


    private com.google.protobuf.MapField<Integer, String>
    internalGetMutableMapValue2() {
      if (mapValue2_ == null) {
        mapValue2_ = com.google.protobuf.MapField.newMapField(
            MapValue2DefaultEntryHolder.defaultEntry);
      }
      if (!mapValue2_.isMutable()) {
        mapValue2_ = mapValue2_.copy();
      }
      bitField0_ |= 0x00040000;
      onChanged();
      return mapValue2_;
    }


    @Override
    public final boolean isInitialized() {
      return true;
    }


    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AllTypes) {
        return mergeFrom((AllTypes) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }


    public Builder mergeFrom(AllTypes other) {
      if (other == AllTypes.getDefaultInstance()) {
        return this;
      }
      if (other.getDoubleValue() != 0D) {
        setDoubleValue(other.getDoubleValue());
      }
      if (other.getFloatValue() != 0F) {
        setFloatValue(other.getFloatValue());
      }
      if (other.getInt32Value() != 0) {
        setInt32Value(other.getInt32Value());
      }
      if (other.getInt64Value() != 0L) {
        setInt64Value(other.getInt64Value());
      }
      if (other.getUint32Value() != 0) {
        setUint32Value(other.getUint32Value());
      }
      if (other.getUint64Value() != 0L) {
        setUint64Value(other.getUint64Value());
      }
      if (other.getSint32Value() != 0) {
        setSint32Value(other.getSint32Value());
      }
      if (other.getSint64Value() != 0L) {
        setSint64Value(other.getSint64Value());
      }
      if (other.getFixed32Value() != 0) {
        setFixed32Value(other.getFixed32Value());
      }
      if (other.getFixed64Value() != 0L) {
        setFixed64Value(other.getFixed64Value());
      }
      if (other.getSfixed32Value() != 0) {
        setSfixed32Value(other.getSfixed32Value());
      }
      if (other.getSfixed64Value() != 0L) {
        setSfixed64Value(other.getSfixed64Value());
      }
      if (other.getBoolValue() != false) {
        setBoolValue(other.getBoolValue());
      }
      if (!other.getStringValue().isEmpty()) {
        stringValue_ = other.stringValue_;
        bitField0_ |= 0x00002000;
        onChanged();
      }
      if (other.getBytesValue() != com.google.protobuf.ByteString.EMPTY) {
        setBytesValue(other.getBytesValue());
      }
      if (other.dayOfTheWeek_ != 0) {
        setDayOfTheWeekValue(other.getDayOfTheWeekValue());
      }
      if (other.hasMessageWithOneOf()) {
        mergeMessageWithOneOf(other.getMessageWithOneOf());
      }
      internalGetMutableMapValue().mergeFrom(
          other.internalGetMapValue());
      bitField0_ |= 0x00020000;
      internalGetMutableMapValue2().mergeFrom(
          other.internalGetMapValue2());
      bitField0_ |= 0x00040000;
      if (!other.repeatedBoolValue_.isEmpty()) {
        if (repeatedBoolValue_.isEmpty()) {
          repeatedBoolValue_ = other.repeatedBoolValue_;
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          ensureRepeatedBoolValueIsMutable();
          repeatedBoolValue_.addAll(other.repeatedBoolValue_);
        }
        onChanged();
      }
      if (!other.repeatedIntValue_.isEmpty()) {
        if (repeatedIntValue_.isEmpty()) {
          repeatedIntValue_ = other.repeatedIntValue_;
          bitField0_ = (bitField0_ & ~0x00100000);
        } else {
          ensureRepeatedIntValueIsMutable();
          repeatedIntValue_.addAll(other.repeatedIntValue_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }


    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry
    )
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              doubleValue_ = input.readDouble();
              bitField0_ |= 0x00000001;
              break;
            } // case 9
            case 21: {
              floatValue_ = input.readFloat();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 24: {
              int32Value_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              int64Value_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              uint32Value_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              uint64Value_ = input.readUInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              sint32Value_ = input.readSInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              sint64Value_ = input.readSInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 77: {
              fixed32Value_ = input.readFixed32();
              bitField0_ |= 0x00000100;
              break;
            } // case 77
            case 81: {
              fixed64Value_ = input.readFixed64();
              bitField0_ |= 0x00000200;
              break;
            } // case 81
            case 93: {
              sfixed32Value_ = input.readSFixed32();
              bitField0_ |= 0x00000400;
              break;
            } // case 93
            case 97: {
              sfixed64Value_ = input.readSFixed64();
              bitField0_ |= 0x00000800;
              break;
            } // case 97
            case 104: {
              boolValue_ = input.readBool();
              bitField0_ |= 0x00001000;
              break;
            } // case 104
            case 114: {
              stringValue_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00002000;
              break;
            } // case 114
            case 122: {
              bytesValue_ = input.readBytes();
              bitField0_ |= 0x00004000;
              break;
            } // case 122
            case 128: {
              dayOfTheWeek_ = input.readEnum();
              bitField0_ |= 0x00008000;
              break;
            } // case 128
            case 138: {
              input.readMessage(
                  getMessageWithOneOfFieldBuilder().getBuilder(),
                  extensionRegistry
              );
              bitField0_ |= 0x00010000;
              break;
            } // case 138
            case 146: {
              com.google.protobuf.MapEntry<String, Integer>
                  mapValue__ = input.readMessage(
                  MapValueDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableMapValue().getMutableMap().put(
                  mapValue__.getKey(), mapValue__.getValue());
              bitField0_ |= 0x00020000;
              break;
            } // case 146
            case 154: {
              com.google.protobuf.MapEntry<Integer, String>
                  mapValue2__ = input.readMessage(
                  MapValue2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableMapValue2().getMutableMap().put(
                  mapValue2__.getKey(), mapValue2__.getValue());
              bitField0_ |= 0x00040000;
              break;
            } // case 154
            case 160: {
              boolean v = input.readBool();
              ensureRepeatedBoolValueIsMutable();
              repeatedBoolValue_.addBoolean(v);
              break;
            } // case 160
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureRepeatedBoolValueIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                repeatedBoolValue_.addBoolean(input.readBool());
              }
              input.popLimit(limit);
              break;
            } // case 162
            case 168: {
              int v = input.readInt32();
              ensureRepeatedIntValueIsMutable();
              repeatedIntValue_.addInt(v);
              break;
            } // case 168
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureRepeatedIntValueIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                repeatedIntValue_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 170
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     */
    public Builder mergeMessageWithOneOf(MessageWithOneOf value) {
      if (messageWithOneOfBuilder_ == null) {
        if (((bitField0_ & 0x00010000) != 0) &&
            messageWithOneOf_ != null &&
            messageWithOneOf_ != MessageWithOneOf.getDefaultInstance()) {
          getMessageWithOneOfBuilder().mergeFrom(value);
        } else {
          messageWithOneOf_ = value;
        }
      } else {
        messageWithOneOfBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }


    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields
    ) {
      return super.mergeUnknownFields(unknownFields);
    }


    /**
     * <code>map&lt;string, int32&gt; map_value = 18;</code>
     */
    public Builder putAllMapValue(
        java.util.Map<String, Integer> values
    ) {
      internalGetMutableMapValue().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00020000;
      return this;
    }


    /**
     * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
     */
    public Builder putAllMapValue2(
        java.util.Map<Integer, String> values
    ) {
      internalGetMutableMapValue2().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00040000;
      return this;
    }


    /**
     * <code>map&lt;string, int32&gt; map_value = 18;</code>
     */
    public Builder putMapValue(
        String key,
        int value
    ) {
      if (key == null) {
        throw new NullPointerException("map key");
      }

      internalGetMutableMapValue().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00020000;
      return this;
    }


    /**
     * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
     */
    public Builder putMapValue2(
        int key,
        String value
    ) {

      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableMapValue2().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00040000;
      return this;
    }


    /**
     * <code>map&lt;string, int32&gt; map_value = 18;</code>
     */
    public Builder removeMapValue(
        String key
    ) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableMapValue().getMutableMap()
          .remove(key);
      return this;
    }


    /**
     * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
     */
    public Builder removeMapValue2(
        int key
    ) {

      internalGetMutableMapValue2().getMutableMap()
          .remove(key);
      return this;
    }


    /**
     * <code>bool bool_value = 13;</code>
     *
     * @param value The boolValue to set.
     *
     * @return This builder for chaining.
     */
    public Builder setBoolValue(boolean value) {

      boolValue_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }


    /**
     * <code>bytes bytes_value = 15;</code>
     *
     * @param value The bytesValue to set.
     *
     * @return This builder for chaining.
     */
    public Builder setBytesValue(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bytesValue_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }


    /**
     * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
     *
     * @param value The dayOfTheWeek to set.
     *
     * @return This builder for chaining.
     */
    public Builder setDayOfTheWeek(DayOfTheWeek value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00008000;
      dayOfTheWeek_ = value.getNumber();
      onChanged();
      return this;
    }


    /**
     * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
     *
     * @param value The enum numeric value on the wire for dayOfTheWeek to set.
     *
     * @return This builder for chaining.
     */
    public Builder setDayOfTheWeekValue(int value) {
      dayOfTheWeek_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }


    /**
     * <code>double double_value = 1;</code>
     *
     * @param value The doubleValue to set.
     *
     * @return This builder for chaining.
     */
    public Builder setDoubleValue(double value) {

      doubleValue_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }


    /**
     * <code>fixed32 fixed32_value = 9;</code>
     *
     * @param value The fixed32Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setFixed32Value(int value) {

      fixed32Value_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }


    /**
     * <code>fixed64 fixed64_value = 10;</code>
     *
     * @param value The fixed64Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setFixed64Value(long value) {

      fixed64Value_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }


    /**
     * <code>float float_value = 2;</code>
     *
     * @param value The floatValue to set.
     *
     * @return This builder for chaining.
     */
    public Builder setFloatValue(float value) {

      floatValue_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }


    /**
     * <code>int32 int32_value = 3;</code>
     *
     * @param value The int32Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setInt32Value(int value) {

      int32Value_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }


    /**
     * <code>int64 int64_value = 4;</code>
     *
     * @param value The int64Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setInt64Value(long value) {

      int64Value_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     */
    public Builder setMessageWithOneOf(MessageWithOneOf value) {
      if (messageWithOneOfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageWithOneOf_ = value;
      } else {
        messageWithOneOfBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }


    /**
     * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
     */
    public Builder setMessageWithOneOf(
        MessageWithOneOf.Builder builderForValue
    ) {
      if (messageWithOneOfBuilder_ == null) {
        messageWithOneOf_ = builderForValue.build();
      } else {
        messageWithOneOfBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }


    /**
     * <code>repeated bool repeated_bool_value = 20;</code>
     *
     * @param index The index to set the value at.
     * @param value The repeatedBoolValue to set.
     *
     * @return This builder for chaining.
     */
    public Builder setRepeatedBoolValue(
        int index, boolean value) {

      ensureRepeatedBoolValueIsMutable();
      repeatedBoolValue_.setBoolean(index, value);
      onChanged();
      return this;
    }


    /**
     * <code>repeated int32 repeated_int_value = 21;</code>
     *
     * @param index The index to set the value at.
     * @param value The repeatedIntValue to set.
     *
     * @return This builder for chaining.
     */
    public Builder setRepeatedIntValue(
        int index, int value) {

      ensureRepeatedIntValueIsMutable();
      repeatedIntValue_.setInt(index, value);
      onChanged();
      return this;
    }


    /**
     * <code>sfixed32 sfixed32_value = 11;</code>
     *
     * @param value The sfixed32Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setSfixed32Value(int value) {

      sfixed32Value_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }


    /**
     * <code>sfixed64 sfixed64_value = 12;</code>
     *
     * @param value The sfixed64Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setSfixed64Value(long value) {

      sfixed64Value_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }


    /**
     * <code>sint32 sint32_value = 7;</code>
     *
     * @param value The sint32Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setSint32Value(int value) {

      sint32Value_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }


    /**
     * <code>sint64 sint64_value = 8;</code>
     *
     * @param value The sint64Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setSint64Value(long value) {

      sint64Value_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }


    /**
     * <code>string string_value = 14;</code>
     *
     * @param value The stringValue to set.
     *
     * @return This builder for chaining.
     */
    public Builder setStringValue(
        String value
    ) {
      if (value == null) {
        throw new NullPointerException();
      }
      stringValue_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }


    /**
     * <code>string string_value = 14;</code>
     *
     * @param value The bytes for stringValue to set.
     *
     * @return This builder for chaining.
     */
    public Builder setStringValueBytes(
        com.google.protobuf.ByteString value
    ) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      stringValue_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }


    /**
     * <code>uint32 uint32_value = 5;</code>
     *
     * @param value The uint32Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setUint32Value(int value) {

      uint32Value_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }


    /**
     * <code>uint64 uint64_value = 6;</code>
     *
     * @param value The uint64Value to set.
     *
     * @return This builder for chaining.
     */
    public Builder setUint64Value(long value) {

      uint64Value_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }


    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields
    ) {
      return super.setUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:beantest.AllTypes)
  }



  private static final class MapValue2DefaultEntryHolder {

    static final com.google.protobuf.MapEntry<
        Integer, String> defaultEntry =
        com.google.protobuf.MapEntry
            .<Integer, String>newDefaultInstance(
                Example.internal_static_beantest_AllTypes_MapValue2Entry_descriptor,
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.STRING,
                ""
            );

  }



  private static final class MapValueDefaultEntryHolder {

    static final com.google.protobuf.MapEntry<
        String, Integer> defaultEntry =
        com.google.protobuf.MapEntry
            .<String, Integer>newDefaultInstance(
                Example.internal_static_beantest_AllTypes_MapValueEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0
            );

  }


  public static AllTypes getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }


  public static final com.google.protobuf.Descriptors.Descriptor
  getDescriptor() {
    return Example.internal_static_beantest_AllTypes_descriptor;
  }


  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }


  public static Builder newBuilder(AllTypes prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }


  public static AllTypes parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }


  public static AllTypes parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry
  )
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }


  public static AllTypes parseFrom(
      java.nio.ByteBuffer data
  )
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }


  public static AllTypes parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry
  )
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }


  public static AllTypes parseFrom(
      com.google.protobuf.ByteString data
  )
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }


  public static AllTypes parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry
  )
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }


  public static AllTypes parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }


  public static AllTypes parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry
  )
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }


  public static AllTypes parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }


  public static AllTypes parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry
  )
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }


  public static AllTypes parseFrom(
      com.google.protobuf.CodedInputStream input
  )
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }


  public static AllTypes parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry
  )
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }


  public static com.google.protobuf.Parser<AllTypes> parser() {
    return PARSER;
  }

  static {
    DEFAULT_INSTANCE = new AllTypes();
  }

  private boolean boolValue_ = false;

  private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;

  private int dayOfTheWeek_ = 0;

  private double doubleValue_ = 0D;

  private int fixed32Value_ = 0;

  private long fixed64Value_ = 0L;

  private float floatValue_ = 0F;

  private int int32Value_ = 0;

  private long int64Value_ = 0L;

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      Integer, String> mapValue2_;

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      String, Integer> mapValue_;

  private byte memoizedIsInitialized = -1;

  private MessageWithOneOf messageWithOneOf_;

  private int repeatedBoolValueMemoizedSerializedSize = -1;

  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.BooleanList repeatedBoolValue_;

  private int repeatedIntValueMemoizedSerializedSize = -1;

  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList repeatedIntValue_;

  private int sfixed32Value_ = 0;

  private long sfixed64Value_ = 0L;

  private int sint32Value_ = 0;

  private long sint64Value_ = 0L;

  @SuppressWarnings("serial")
  private volatile Object stringValue_ = "";

  private int uint32Value_ = 0;

  private long uint64Value_ = 0L;


  // Use AllTypes.newBuilder() to construct.
  private AllTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }


  private AllTypes() {
    stringValue_ = "";
    bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    dayOfTheWeek_ = 0;
    repeatedBoolValue_ = emptyBooleanList();
    repeatedIntValue_ = emptyIntList();
  }


  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  @Override
  public boolean containsMapValue(
      String key
  ) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetMapValue().getMap().containsKey(key);
  }


  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  @Override
  public boolean containsMapValue2(
      int key
  ) {

    return internalGetMapValue2().getMap().containsKey(key);
  }


  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof AllTypes)) {
      return super.equals(obj);
    }
    AllTypes other = (AllTypes) obj;

    if (Double.doubleToLongBits(getDoubleValue())
        != Double.doubleToLongBits(
        other.getDoubleValue())) {
      return false;
    }
    if (Float.floatToIntBits(getFloatValue())
        != Float.floatToIntBits(
        other.getFloatValue())) {
      return false;
    }
    if (getInt32Value()
        != other.getInt32Value()) {
      return false;
    }
    if (getInt64Value()
        != other.getInt64Value()) {
      return false;
    }
    if (getUint32Value()
        != other.getUint32Value()) {
      return false;
    }
    if (getUint64Value()
        != other.getUint64Value()) {
      return false;
    }
    if (getSint32Value()
        != other.getSint32Value()) {
      return false;
    }
    if (getSint64Value()
        != other.getSint64Value()) {
      return false;
    }
    if (getFixed32Value()
        != other.getFixed32Value()) {
      return false;
    }
    if (getFixed64Value()
        != other.getFixed64Value()) {
      return false;
    }
    if (getSfixed32Value()
        != other.getSfixed32Value()) {
      return false;
    }
    if (getSfixed64Value()
        != other.getSfixed64Value()) {
      return false;
    }
    if (getBoolValue()
        != other.getBoolValue()) {
      return false;
    }
    if (!getStringValue()
        .equals(other.getStringValue())) {
      return false;
    }
    if (!getBytesValue()
        .equals(other.getBytesValue())) {
      return false;
    }
    if (dayOfTheWeek_ != other.dayOfTheWeek_) {
      return false;
    }
    if (hasMessageWithOneOf() != other.hasMessageWithOneOf()) {
      return false;
    }
    if (hasMessageWithOneOf()) {
      if (!getMessageWithOneOf()
          .equals(other.getMessageWithOneOf())) {
        return false;
      }
    }
    if (!internalGetMapValue().equals(
        other.internalGetMapValue())) {
      return false;
    }
    if (!internalGetMapValue2().equals(
        other.internalGetMapValue2())) {
      return false;
    }
    if (!getRepeatedBoolValueList()
        .equals(other.getRepeatedBoolValueList())) {
      return false;
    }
    if (!getRepeatedIntValueList()
        .equals(other.getRepeatedIntValueList())) {
      return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) {
      return false;
    }
    return true;
  }


  /**
   * <code>bool bool_value = 13;</code>
   *
   * @return The boolValue.
   */
  @Override
  public boolean getBoolValue() {
    return boolValue_;
  }


  /**
   * <code>bytes bytes_value = 15;</code>
   *
   * @return The bytesValue.
   */
  @Override
  public com.google.protobuf.ByteString getBytesValue() {
    return bytesValue_;
  }


  /**
   * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
   *
   * @return The dayOfTheWeek.
   */
  @Override
  public DayOfTheWeek getDayOfTheWeek() {
    DayOfTheWeek result = DayOfTheWeek.forNumber(dayOfTheWeek_);
    return result == null ? DayOfTheWeek.UNRECOGNIZED : result;
  }


  /**
   * <code>.beantest.DayOfTheWeek day_of_the_week = 16;</code>
   *
   * @return The enum numeric value on the wire for dayOfTheWeek.
   */
  @Override
  public int getDayOfTheWeekValue() {
    return dayOfTheWeek_;
  }


  @Override
  public AllTypes getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }


  /**
   * <code>double double_value = 1;</code>
   *
   * @return The doubleValue.
   */
  @Override
  public double getDoubleValue() {
    return doubleValue_;
  }


  /**
   * <code>fixed32 fixed32_value = 9;</code>
   *
   * @return The fixed32Value.
   */
  @Override
  public int getFixed32Value() {
    return fixed32Value_;
  }


  /**
   * <code>fixed64 fixed64_value = 10;</code>
   *
   * @return The fixed64Value.
   */
  @Override
  public long getFixed64Value() {
    return fixed64Value_;
  }


  /**
   * <code>float float_value = 2;</code>
   *
   * @return The floatValue.
   */
  @Override
  public float getFloatValue() {
    return floatValue_;
  }


  /**
   * <code>int32 int32_value = 3;</code>
   *
   * @return The int32Value.
   */
  @Override
  public int getInt32Value() {
    return int32Value_;
  }


  /**
   * <code>int64 int64_value = 4;</code>
   *
   * @return The int64Value.
   */
  @Override
  public long getInt64Value() {
    return int64Value_;
  }


  /**
   * Use {@link #getMapValueMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, Integer> getMapValue() {
    return getMapValueMap();
  }


  /**
   * Use {@link #getMapValue2Map()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<Integer, String> getMapValue2() {
    return getMapValue2Map();
  }


  public int getMapValue2Count() {
    return internalGetMapValue2().getMap().size();
  }


  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  @Override
  public java.util.Map<Integer, String> getMapValue2Map() {
    return internalGetMapValue2().getMap();
  }


  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  @Override
  public /* nullable */
  String getMapValue2OrDefault(
      int key,
      /* nullable */
      String defaultValue
  ) {

    java.util.Map<Integer, String> map =
        internalGetMapValue2().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }


  /**
   * <code>map&lt;int32, string&gt; map_value2 = 19;</code>
   */
  @Override
  public String getMapValue2OrThrow(
      int key
  ) {

    java.util.Map<Integer, String> map =
        internalGetMapValue2().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }


  public int getMapValueCount() {
    return internalGetMapValue().getMap().size();
  }


  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  @Override
  public java.util.Map<String, Integer> getMapValueMap() {
    return internalGetMapValue().getMap();
  }


  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  @Override
  public int getMapValueOrDefault(
      String key,
      int defaultValue
  ) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<String, Integer> map =
        internalGetMapValue().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }


  /**
   * <code>map&lt;string, int32&gt; map_value = 18;</code>
   */
  @Override
  public int getMapValueOrThrow(
      String key
  ) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<String, Integer> map =
        internalGetMapValue().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }


  /**
   * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
   *
   * @return The messageWithOneOf.
   */
  @Override
  public MessageWithOneOf getMessageWithOneOf() {
    return messageWithOneOf_ == null ? MessageWithOneOf.getDefaultInstance() : messageWithOneOf_;
  }


  /**
   * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
   */
  @Override
  public MessageWithOneOfOrBuilder getMessageWithOneOfOrBuilder() {
    return messageWithOneOf_ == null ? MessageWithOneOf.getDefaultInstance() : messageWithOneOf_;
  }


  @Override
  public com.google.protobuf.Parser<AllTypes> getParserForType() {
    return PARSER;
  }


  /**
   * <code>repeated bool repeated_bool_value = 20;</code>
   *
   * @param index The index of the element to return.
   *
   * @return The repeatedBoolValue at the given index.
   */
  public boolean getRepeatedBoolValue(int index) {
    return repeatedBoolValue_.getBoolean(index);
  }


  /**
   * <code>repeated bool repeated_bool_value = 20;</code>
   *
   * @return The count of repeatedBoolValue.
   */
  public int getRepeatedBoolValueCount() {
    return repeatedBoolValue_.size();
  }


  /**
   * <code>repeated bool repeated_bool_value = 20;</code>
   *
   * @return A list containing the repeatedBoolValue.
   */
  @Override
  public java.util.List<Boolean>
  getRepeatedBoolValueList() {
    return repeatedBoolValue_;
  }


  /**
   * <code>repeated int32 repeated_int_value = 21;</code>
   *
   * @param index The index of the element to return.
   *
   * @return The repeatedIntValue at the given index.
   */
  public int getRepeatedIntValue(int index) {
    return repeatedIntValue_.getInt(index);
  }


  /**
   * <code>repeated int32 repeated_int_value = 21;</code>
   *
   * @return The count of repeatedIntValue.
   */
  public int getRepeatedIntValueCount() {
    return repeatedIntValue_.size();
  }


  /**
   * <code>repeated int32 repeated_int_value = 21;</code>
   *
   * @return A list containing the repeatedIntValue.
   */
  @Override
  public java.util.List<Integer>
  getRepeatedIntValueList() {
    return repeatedIntValue_;
  }


  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) {
      return size;
    }

    size = 0;
    if (Double.doubleToRawLongBits(doubleValue_) != 0) {
      size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleValue_);
    }
    if (Float.floatToRawIntBits(floatValue_) != 0) {
      size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, floatValue_);
    }
    if (int32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Value_);
    }
    if (int64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Value_);
    }
    if (uint32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32Value_);
    }
    if (uint64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64Value_);
    }
    if (sint32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32Value_);
    }
    if (sint64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64Value_);
    }
    if (fixed32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32Value_);
    }
    if (fixed64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64Value_);
    }
    if (sfixed32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32Value_);
    }
    if (sfixed64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64Value_);
    }
    if (boolValue_ != false) {
      size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, boolValue_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringValue_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, stringValue_);
    }
    if (!bytesValue_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytesValue_);
    }
    if (dayOfTheWeek_ != DayOfTheWeek.UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, dayOfTheWeek_);
    }
    if (messageWithOneOf_ != null) {
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getMessageWithOneOf());
    }
    for (java.util.Map.Entry<String, Integer> entry
        : internalGetMapValue().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, Integer>
          mapValue__ = MapValueDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, mapValue__);
    }
    for (java.util.Map.Entry<Integer, String> entry
        : internalGetMapValue2().getMap().entrySet()) {
      com.google.protobuf.MapEntry<Integer, String>
          mapValue2__ = MapValue2DefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, mapValue2__);
    }
    {
      int dataSize = 0;
      dataSize = 1 * getRepeatedBoolValueList().size();
      size += dataSize;
      if (!getRepeatedBoolValueList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      repeatedBoolValueMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < repeatedIntValue_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(repeatedIntValue_.getInt(i));
      }
      size += dataSize;
      if (!getRepeatedIntValueList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      repeatedIntValueMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }


  /**
   * <code>sfixed32 sfixed32_value = 11;</code>
   *
   * @return The sfixed32Value.
   */
  @Override
  public int getSfixed32Value() {
    return sfixed32Value_;
  }


  /**
   * <code>sfixed64 sfixed64_value = 12;</code>
   *
   * @return The sfixed64Value.
   */
  @Override
  public long getSfixed64Value() {
    return sfixed64Value_;
  }


  /**
   * <code>sint32 sint32_value = 7;</code>
   *
   * @return The sint32Value.
   */
  @Override
  public int getSint32Value() {
    return sint32Value_;
  }


  /**
   * <code>sint64 sint64_value = 8;</code>
   *
   * @return The sint64Value.
   */
  @Override
  public long getSint64Value() {
    return sint64Value_;
  }


  /**
   * <code>string string_value = 14;</code>
   *
   * @return The stringValue.
   */
  @Override
  public String getStringValue() {
    Object ref = stringValue_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      stringValue_ = s;
      return s;
    }
  }


  /**
   * <code>string string_value = 14;</code>
   *
   * @return The bytes for stringValue.
   */
  @Override
  public com.google.protobuf.ByteString
  getStringValueBytes() {
    Object ref = stringValue_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      stringValue_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }


  /**
   * <code>uint32 uint32_value = 5;</code>
   *
   * @return The uint32Value.
   */
  @Override
  public int getUint32Value() {
    return uint32Value_;
  }


  /**
   * <code>uint64 uint64_value = 6;</code>
   *
   * @return The uint64Value.
   */
  @Override
  public long getUint64Value() {
    return uint64Value_;
  }


  /**
   * <code>.beantest.MessageWithOneOf message_with_one_of = 17;</code>
   *
   * @return Whether the messageWithOneOf field is set.
   */
  @Override
  public boolean hasMessageWithOneOf() {
    return messageWithOneOf_ != null;
  }


  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getDoubleValue()));
    hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + Float.floatToIntBits(
        getFloatValue());
    hash = (37 * hash) + INT32_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getInt32Value();
    hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getInt64Value());
    hash = (37 * hash) + UINT32_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getUint32Value();
    hash = (37 * hash) + UINT64_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUint64Value());
    hash = (37 * hash) + SINT32_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getSint32Value();
    hash = (37 * hash) + SINT64_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSint64Value());
    hash = (37 * hash) + FIXED32_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getFixed32Value();
    hash = (37 * hash) + FIXED64_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFixed64Value());
    hash = (37 * hash) + SFIXED32_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getSfixed32Value();
    hash = (37 * hash) + SFIXED64_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSfixed64Value());
    hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getBoolValue());
    hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getStringValue().hashCode();
    hash = (37 * hash) + BYTES_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getBytesValue().hashCode();
    hash = (37 * hash) + DAY_OF_THE_WEEK_FIELD_NUMBER;
    hash = (53 * hash) + dayOfTheWeek_;
    if (hasMessageWithOneOf()) {
      hash = (37 * hash) + MESSAGE_WITH_ONE_OF_FIELD_NUMBER;
      hash = (53 * hash) + getMessageWithOneOf().hashCode();
    }
    if (!internalGetMapValue().getMap().isEmpty()) {
      hash = (37 * hash) + MAP_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMapValue().hashCode();
    }
    if (!internalGetMapValue2().getMap().isEmpty()) {
      hash = (37 * hash) + MAP_VALUE2_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMapValue2().hashCode();
    }
    if (getRepeatedBoolValueCount() > 0) {
      hash = (37 * hash) + REPEATED_BOOL_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getRepeatedBoolValueList().hashCode();
    }
    if (getRepeatedIntValueCount() > 0) {
      hash = (37 * hash) + REPEATED_INT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getRepeatedIntValueList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }


  @Override
  protected FieldAccessorTable
  internalGetFieldAccessorTable() {
    return Example.internal_static_beantest_AllTypes_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AllTypes.class, Builder.class);
  }


  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number
  ) {
    switch (number) {
      case 18:
        return internalGetMapValue();
      case 19:
        return internalGetMapValue2();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }


  private com.google.protobuf.MapField<String, Integer>
  internalGetMapValue() {
    if (mapValue_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          MapValueDefaultEntryHolder.defaultEntry);
    }
    return mapValue_;
  }


  private com.google.protobuf.MapField<Integer, String>
  internalGetMapValue2() {
    if (mapValue2_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          MapValue2DefaultEntryHolder.defaultEntry);
    }
    return mapValue2_;
  }


  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) {
      return true;
    }
    if (isInitialized == 0) {
      return false;
    }

    memoizedIsInitialized = 1;
    return true;
  }


  @Override
  public Builder newBuilderForType() {
    return newBuilder();
  }


  @Override
  protected Builder newBuilderForType(
      BuilderParent parent
  ) {
    Builder builder = new Builder(parent);
    return builder;
  }


  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused
  ) {
    return new AllTypes();
  }


  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }


  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
      throws java.io.IOException {
    getSerializedSize();
    if (Double.doubleToRawLongBits(doubleValue_) != 0) {
      output.writeDouble(1, doubleValue_);
    }
    if (Float.floatToRawIntBits(floatValue_) != 0) {
      output.writeFloat(2, floatValue_);
    }
    if (int32Value_ != 0) {
      output.writeInt32(3, int32Value_);
    }
    if (int64Value_ != 0L) {
      output.writeInt64(4, int64Value_);
    }
    if (uint32Value_ != 0) {
      output.writeUInt32(5, uint32Value_);
    }
    if (uint64Value_ != 0L) {
      output.writeUInt64(6, uint64Value_);
    }
    if (sint32Value_ != 0) {
      output.writeSInt32(7, sint32Value_);
    }
    if (sint64Value_ != 0L) {
      output.writeSInt64(8, sint64Value_);
    }
    if (fixed32Value_ != 0) {
      output.writeFixed32(9, fixed32Value_);
    }
    if (fixed64Value_ != 0L) {
      output.writeFixed64(10, fixed64Value_);
    }
    if (sfixed32Value_ != 0) {
      output.writeSFixed32(11, sfixed32Value_);
    }
    if (sfixed64Value_ != 0L) {
      output.writeSFixed64(12, sfixed64Value_);
    }
    if (boolValue_ != false) {
      output.writeBool(13, boolValue_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringValue_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, stringValue_);
    }
    if (!bytesValue_.isEmpty()) {
      output.writeBytes(15, bytesValue_);
    }
    if (dayOfTheWeek_ != DayOfTheWeek.UNSPECIFIED.getNumber()) {
      output.writeEnum(16, dayOfTheWeek_);
    }
    if (messageWithOneOf_ != null) {
      output.writeMessage(17, getMessageWithOneOf());
    }
    com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
            output,
            internalGetMapValue(),
            MapValueDefaultEntryHolder.defaultEntry,
            18
        );
    com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
            output,
            internalGetMapValue2(),
            MapValue2DefaultEntryHolder.defaultEntry,
            19
        );
    if (getRepeatedBoolValueList().size() > 0) {
      output.writeUInt32NoTag(162);
      output.writeUInt32NoTag(repeatedBoolValueMemoizedSerializedSize);
    }
    for (int i = 0; i < repeatedBoolValue_.size(); i++) {
      output.writeBoolNoTag(repeatedBoolValue_.getBoolean(i));
    }
    if (getRepeatedIntValueList().size() > 0) {
      output.writeUInt32NoTag(170);
      output.writeUInt32NoTag(repeatedIntValueMemoizedSerializedSize);
    }
    for (int i = 0; i < repeatedIntValue_.size(); i++) {
      output.writeInt32NoTag(repeatedIntValue_.getInt(i));
    }
    getUnknownFields().writeTo(output);
  }

}

